{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Expound Team\\\\Downloads\\\\offsite-attendance-react\\\\frontend\\\\src\\\\components\\\\StickyNavbar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Flex, HStack, IconButton, useDisclosure, Stack, Text, Link, useColorModeValue } from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Links = [{\n  label: \"Dashboard\",\n  href: \"/\"\n}, {\n  label: \"Attendance\",\n  href: \"/attendance\"\n}, {\n  label: \"Reports\",\n  href: \"/reports\"\n}, {\n  label: \"Settings\",\n  href: \"/settings\"\n}];\nconst NavLink = ({\n  label,\n  href\n}) => {\n  _s();\n  const location = useLocation();\n  const isActive = location.pathname === href;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    px: 4,\n    py: 2,\n    rounded: \"full\",\n    fontWeight: \"medium\",\n    fontSize: \"sm\",\n    bg: isActive ? \"teal.100\" : \"transparent\",\n    color: isActive ? \"teal.700\" : useColorModeValue(\"gray.600\", \"gray.300\"),\n    _hover: {\n      textDecoration: \"none\",\n      bg: \"teal.200\",\n      transform: \"scale(1.05)\",\n      transition: \"all 0.2s ease-in-out\"\n    },\n    href: href,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NavLink, \"RfgHdYDtXHD7EkZsdz7AlZfT8EA=\", false, function () {\n  return [useLocation, useColorModeValue];\n});\n_c = NavLink;\nconst StickyNavbar = () => {\n  _s2();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"sticky\",\n    top: \"0\",\n    zIndex: \"999\",\n    bg: useColorModeValue(\"white\", \"gray.900\"),\n    px: 4,\n    boxShadow: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      h: 16,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: \"/logo.png\" // replace with your actual logo path or URL\n        ,\n        alt: \"Expound HR Logo\",\n        boxSize: \"32px\",\n        objectFit: \"contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        fontSize: \"lg\",\n        color: \"teal.600\",\n        children: \"Expound HR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"md\",\n        icon: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 42\n        }, this),\n        \"aria-label\": \"Toggle Navigation\",\n        display: {\n          md: \"none\"\n        },\n        onClick: isOpen ? onClose : onOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 2,\n        display: {\n          base: \"none\",\n          md: \"flex\"\n        },\n        children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n          ...link\n        }, link.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n      pb: 4,\n      display: {\n        md: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        as: \"nav\",\n        spacing: 2,\n        children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n          ...link\n        }, link.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(StickyNavbar, \"6awIlLqqqpzda2oInKHfZNU7DaE=\", false, function () {\n  return [useDisclosure, useColorModeValue];\n});\n_c2 = StickyNavbar;\nexport default StickyNavbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"StickyNavbar\");","map":{"version":3,"names":["React","Box","Flex","HStack","IconButton","useDisclosure","Stack","Text","Link","useColorModeValue","HamburgerIcon","CloseIcon","useLocation","jsxDEV","_jsxDEV","Links","label","href","NavLink","_s","location","isActive","pathname","px","py","rounded","fontWeight","fontSize","bg","color","_hover","textDecoration","transform","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StickyNavbar","_s2","isOpen","onOpen","onClose","position","top","zIndex","boxShadow","h","alignItems","justifyContent","Image","src","alt","boxSize","objectFit","size","icon","display","md","onClick","spacing","base","map","link","pb","as","_c2","$RefreshReg$"],"sources":["C:/Users/Expound Team/Downloads/offsite-attendance-react/frontend/src/components/StickyNavbar.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  IconButton,\r\n  useDisclosure,\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Links = [\r\n  { label: \"Dashboard\", href: \"/\" },\r\n  { label: \"Attendance\", href: \"/attendance\" },\r\n  { label: \"Reports\", href: \"/reports\" },\r\n  { label: \"Settings\", href: \"/settings\" },\r\n];\r\n\r\nconst NavLink = ({ label, href }) => {\r\n  const location = useLocation();\r\n  const isActive = location.pathname === href;\r\n\r\n  return (\r\n    <Link\r\n      px={4}\r\n      py={2}\r\n      rounded=\"full\"\r\n      fontWeight=\"medium\"\r\n      fontSize=\"sm\"\r\n      bg={isActive ? \"teal.100\" : \"transparent\"}\r\n      color={isActive ? \"teal.700\" : useColorModeValue(\"gray.600\", \"gray.300\")}\r\n      _hover={{\r\n        textDecoration: \"none\",\r\n        bg: \"teal.200\",\r\n        transform: \"scale(1.05)\",\r\n        transition: \"all 0.2s ease-in-out\",\r\n      }}\r\n      href={href}\r\n    >\r\n      {label}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst StickyNavbar = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Box\r\n      position=\"sticky\"\r\n      top=\"0\"\r\n      zIndex=\"999\"\r\n      bg={useColorModeValue(\"white\", \"gray.900\")}\r\n      px={4}\r\n      boxShadow=\"sm\"\r\n    >\r\n      <Flex h={16} alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Image\r\n          src=\"/logo.png\" // replace with your actual logo path or URL\r\n          alt=\"Expound HR Logo\"\r\n          boxSize=\"32px\"\r\n          objectFit=\"contain\"\r\n        />\r\n        <Text fontWeight=\"bold\" fontSize=\"lg\" color=\"teal.600\">\r\n          Expound HR\r\n        </Text>\r\n\r\n        <IconButton\r\n          size=\"md\"\r\n          icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n          aria-label=\"Toggle Navigation\"\r\n          display={{ md: \"none\" }}\r\n          onClick={isOpen ? onClose : onOpen}\r\n        />\r\n\r\n        <HStack spacing={2} display={{ base: \"none\", md: \"flex\" }}>\r\n          {Links.map((link) => (\r\n            <NavLink key={link.label} {...link} />\r\n          ))}\r\n        </HStack>\r\n      </Flex>\r\n\r\n      {isOpen ? (\r\n        <Box pb={4} display={{ md: \"none\" }}>\r\n          <Stack as=\"nav\" spacing={2}>\r\n            {Links.map((link) => (\r\n              <NavLink key={link.label} {...link} />\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StickyNavbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}